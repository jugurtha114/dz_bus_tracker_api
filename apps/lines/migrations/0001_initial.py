# Generated by Django 5.2.1 on 2025-05-18 04:48

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Line',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('color', models.CharField(default='#000000', help_text='Hex color code for the line (e.g., #FF0000)', max_length=7, verbose_name='color')),
                ('frequency', models.PositiveSmallIntegerField(blank=True, help_text='Average frequency in minutes', null=True, verbose_name='frequency')),
            ],
            options={
                'verbose_name': 'line',
                'verbose_name_plural': 'lines',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10, verbose_name='latitude')),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10, verbose_name='longitude')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='address')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('features', models.JSONField(blank=True, default=list, help_text='Features of the stop (shelter, bench, etc.)', verbose_name='features')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='stops/', verbose_name='photo')),
            ],
            options={
                'verbose_name': 'stop',
                'verbose_name_plural': 'stops',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['latitude', 'longitude'], name='lines_stop_latitud_ca0770_idx')],
            },
        ),
        migrations.CreateModel(
            name='LineStop',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(verbose_name='order')),
                ('distance_from_previous', models.DecimalField(blank=True, decimal_places=2, help_text='Distance from previous stop in meters', max_digits=10, null=True, verbose_name='distance from previous')),
                ('average_time_from_previous', models.PositiveSmallIntegerField(blank=True, help_text='Average time from previous stop in seconds', null=True, verbose_name='average time from previous')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_stops', to='lines.line', verbose_name='line')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_stops', to='lines.stop', verbose_name='stop')),
            ],
            options={
                'verbose_name': 'line stop',
                'verbose_name_plural': 'line stops',
                'ordering': ['line', 'order'],
                'unique_together': {('line', 'order'), ('line', 'stop')},
            },
        ),
        migrations.AddField(
            model_name='line',
            name='stops',
            field=models.ManyToManyField(related_name='lines', through='lines.LineStop', to='lines.stop', verbose_name='stops'),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveSmallIntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], verbose_name='day of week')),
                ('start_time', models.TimeField(verbose_name='start time')),
                ('end_time', models.TimeField(verbose_name='end time')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('frequency_minutes', models.PositiveSmallIntegerField(help_text='Bus frequency in minutes during this schedule', verbose_name='frequency minutes')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='lines.line', verbose_name='line')),
            ],
            options={
                'verbose_name': 'schedule',
                'verbose_name_plural': 'schedules',
                'ordering': ['line', 'day_of_week', 'start_time'],
                'unique_together': {('line', 'day_of_week', 'start_time')},
            },
        ),
    ]
