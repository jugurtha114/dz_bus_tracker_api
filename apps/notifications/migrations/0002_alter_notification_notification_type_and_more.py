# Generated by Django 5.2.1 on 2025-07-25 03:35

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('buses', '0002_bus_average_speed'),
        ('lines', '0001_initial'),
        ('notifications', '0001_initial'),
        ('tracking', '0002_routesegment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('driver_approved', 'Driver Approved'), ('driver_rejected', 'Driver Rejected'), ('bus_arriving', 'Bus Arriving'), ('bus_delayed', 'Bus Delayed'), ('bus_cancelled', 'Bus Cancelled'), ('system', 'System'), ('arrival', 'Bus Arrival'), ('route_change', 'Route Change'), ('seat_availability', 'Seat Availability'), ('trip_start', 'Trip Started'), ('trip_end', 'Trip Ended'), ('achievement', 'Achievement Unlocked'), ('reward', 'Reward Earned'), ('trip_update', 'Trip Update')], max_length=50, verbose_name='notification type'),
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('driver_approved', 'Driver Approved'), ('driver_rejected', 'Driver Rejected'), ('bus_arriving', 'Bus Arriving'), ('bus_delayed', 'Bus Delayed'), ('bus_cancelled', 'Bus Cancelled'), ('system', 'System'), ('arrival', 'Bus Arrival'), ('route_change', 'Route Change'), ('seat_availability', 'Seat Availability'), ('trip_start', 'Trip Started'), ('trip_end', 'Trip Ended'), ('achievement', 'Achievement Unlocked'), ('reward', 'Reward Earned'), ('trip_update', 'Trip Update')], max_length=50, verbose_name='notification type')),
                ('channels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('push', 'Push'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In App')], max_length=20), default=list, help_text='Preferred notification channels', size=None)),
                ('enabled', models.BooleanField(default=True, verbose_name='enabled')),
                ('minutes_before_arrival', models.IntegerField(default=10, help_text='For arrival notifications', verbose_name='minutes before arrival')),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Do not send notifications after this time', null=True, verbose_name='quiet hours start')),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='Resume notifications after this time', null=True, verbose_name='quiet hours end')),
                ('favorite_lines', models.ManyToManyField(blank=True, help_text='Get notifications for these lines', related_name='notification_preferences', to='lines.line')),
                ('favorite_stops', models.ManyToManyField(blank=True, help_text='Get notifications for these stops', related_name='notification_preferences', to='lines.stop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'notification preference',
                'verbose_name_plural': 'notification preferences',
                'unique_together': {('user', 'notification_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationSchedule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('driver_approved', 'Driver Approved'), ('driver_rejected', 'Driver Rejected'), ('bus_arriving', 'Bus Arriving'), ('bus_delayed', 'Bus Delayed'), ('bus_cancelled', 'Bus Cancelled'), ('system', 'System'), ('arrival', 'Bus Arrival'), ('route_change', 'Route Change'), ('seat_availability', 'Seat Availability'), ('trip_start', 'Trip Started'), ('trip_end', 'Trip Ended'), ('achievement', 'Achievement Unlocked'), ('reward', 'Reward Earned'), ('trip_update', 'Trip Update')], max_length=50, verbose_name='type')),
                ('scheduled_for', models.DateTimeField(verbose_name='scheduled for')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('message', models.TextField(verbose_name='message')),
                ('channels', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('push', 'Push'), ('sms', 'SMS'), ('email', 'Email'), ('in_app', 'In App')], max_length=20), default=list, help_text='Channels to send through', size=None)),
                ('data', models.JSONField(default=dict, verbose_name='data')),
                ('is_sent', models.BooleanField(default=False, verbose_name='is sent')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='sent at')),
                ('error', models.TextField(blank=True, verbose_name='error')),
                ('bus', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='buses.bus')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lines.line')),
                ('stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lines.stop')),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracking.trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_notifications', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'notification schedule',
                'verbose_name_plural': 'notification schedules',
                'ordering': ['scheduled_for'],
                'indexes': [models.Index(fields=['is_sent', 'scheduled_for'], name='notificatio_is_sent_6fdf11_idx'), models.Index(fields=['user', 'scheduled_for'], name='notificatio_user_id_3a612d_idx')],
            },
        ),
    ]
