# Generated by Django 5.2.1 on 2025-05-18 04:48

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('buses', '0001_initial'),
        ('drivers', '0001_initial'),
        ('lines', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('is_completed', models.BooleanField(default=False, verbose_name='completed')),
                ('distance', models.DecimalField(blank=True, decimal_places=2, help_text='Distance traveled in km', max_digits=10, null=True, verbose_name='distance')),
                ('average_speed', models.DecimalField(blank=True, decimal_places=2, help_text='Average speed in km/h', max_digits=5, null=True, verbose_name='average speed')),
                ('max_passengers', models.PositiveSmallIntegerField(default=0, help_text='Maximum number of passengers during the trip', verbose_name='max passengers')),
                ('total_stops', models.PositiveSmallIntegerField(default=0, help_text='Total number of stops made', verbose_name='total stops')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='buses.bus', verbose_name='bus')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='drivers.driver', verbose_name='driver')),
                ('end_stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip_ends', to='lines.stop', verbose_name='end stop')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='lines.line', verbose_name='line')),
                ('start_stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trip_starts', to='lines.stop', verbose_name='start stop')),
            ],
            options={
                'verbose_name': 'trip',
                'verbose_name_plural': 'trips',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='Anomaly',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('speed', 'Speed anomaly'), ('route', 'Route deviation'), ('schedule', 'Schedule deviation'), ('passengers', 'Unusual passenger count'), ('gap', 'Service gap'), ('bunching', 'Bus bunching'), ('other', 'Other')], max_length=50, verbose_name='type')),
                ('description', models.TextField(verbose_name='description')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20, verbose_name='severity')),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, verbose_name='latitude')),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True, verbose_name='longitude')),
                ('resolved', models.BooleanField(default=False, verbose_name='resolved')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='resolved at')),
                ('resolution_notes', models.TextField(blank=True, verbose_name='resolution notes')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to='buses.bus', verbose_name='bus')),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anomalies', to='tracking.trip', verbose_name='trip')),
            ],
            options={
                'verbose_name': 'anomaly',
                'verbose_name_plural': 'anomalies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WaitingPassengers',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveSmallIntegerField(verbose_name='count')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waiting_passengers', to='lines.line', verbose_name='line')),
                ('reported_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_waiting', to=settings.AUTH_USER_MODEL, verbose_name='reported by')),
                ('stop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_passengers', to='lines.stop', verbose_name='stop')),
            ],
            options={
                'verbose_name': 'waiting passengers',
                'verbose_name_plural': 'waiting passengers',
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='BusLine',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('tracking_status', models.CharField(choices=[('idle', 'Idle'), ('active', 'Active'), ('paused', 'Paused')], default='idle', max_length=20, verbose_name='tracking status')),
                ('trip_id', models.UUIDField(blank=True, help_text='ID of the current trip', null=True, verbose_name='trip ID')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='buses.bus', verbose_name='bus')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buses', to='lines.line', verbose_name='line')),
            ],
            options={
                'verbose_name': 'bus line',
                'verbose_name_plural': 'bus lines',
                'ordering': ['-created_at'],
                'unique_together': {('bus', 'line')},
            },
        ),
        migrations.CreateModel(
            name='LocationUpdate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10, verbose_name='latitude')),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10, verbose_name='longitude')),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='altitude')),
                ('speed', models.DecimalField(blank=True, decimal_places=2, help_text='Speed in km/h', max_digits=5, null=True, verbose_name='speed')),
                ('heading', models.DecimalField(blank=True, decimal_places=2, help_text='Heading in degrees (0-360)', max_digits=5, null=True, verbose_name='heading')),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, help_text='Accuracy in meters', max_digits=5, null=True, verbose_name='accuracy')),
                ('trip_id', models.UUIDField(blank=True, help_text='ID of the current trip', null=True, verbose_name='trip ID')),
                ('distance_to_stop', models.DecimalField(blank=True, decimal_places=2, help_text='Distance to nearest stop in meters', max_digits=10, null=True, verbose_name='distance to stop')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to='buses.bus', verbose_name='bus')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_updates', to='lines.line', verbose_name='line')),
                ('nearest_stop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_updates', to='lines.stop', verbose_name='nearest stop')),
            ],
            options={
                'verbose_name': 'location update',
                'verbose_name_plural': 'location updates',
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'indexes': [models.Index(fields=['bus', '-created_at'], name='tracking_lo_bus_id_af9212_idx'), models.Index(fields=['line', '-created_at'], name='tracking_lo_line_id_7feead_idx'), models.Index(fields=['trip_id'], name='tracking_lo_trip_id_63ee14_idx')],
            },
        ),
        migrations.CreateModel(
            name='PassengerCount',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveSmallIntegerField(verbose_name='count')),
                ('capacity', models.PositiveSmallIntegerField(help_text='Total capacity of the bus', verbose_name='capacity')),
                ('occupancy_rate', models.DecimalField(decimal_places=2, help_text='Occupancy rate (0-1)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='occupancy rate')),
                ('trip_id', models.UUIDField(blank=True, help_text='ID of the current trip', null=True, verbose_name='trip ID')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passenger_counts', to='buses.bus', verbose_name='bus')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='passenger_counts', to='lines.line', verbose_name='line')),
                ('stop', models.ForeignKey(blank=True, help_text='Stop where the count was recorded', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='passenger_counts', to='lines.stop', verbose_name='stop')),
            ],
            options={
                'verbose_name': 'passenger count',
                'verbose_name_plural': 'passenger counts',
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
                'indexes': [models.Index(fields=['bus', '-created_at'], name='tracking_pa_bus_id_9e6df0_idx'), models.Index(fields=['line', '-created_at'], name='tracking_pa_line_id_8e34c0_idx'), models.Index(fields=['trip_id'], name='tracking_pa_trip_id_c9bcf2_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['bus', '-start_time'], name='tracking_tr_bus_id_cdcbef_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['driver', '-start_time'], name='tracking_tr_driver__b62118_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['line', '-start_time'], name='tracking_tr_line_id_dc6c73_idx'),
        ),
    ]
