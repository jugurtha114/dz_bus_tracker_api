# Generated by Django 5.1.8 on 2025-04-16 16:28

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("buses", "0002_initial"),
        ("drivers", "0001_initial"),
        ("lines", "0001_initial"),
        ("schedules", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="OfflineLocationBatch",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "collected_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="collected at"
                    ),
                ),
                (
                    "processed",
                    models.BooleanField(default=False, verbose_name="processed"),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="processed at"
                    ),
                ),
                ("data", models.JSONField(default=list, verbose_name="location data")),
                (
                    "bus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offline_batches",
                        to="buses.bus",
                        verbose_name="bus",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offline_batches",
                        to="drivers.driver",
                        verbose_name="driver",
                    ),
                ),
                (
                    "line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offline_batches",
                        to="lines.line",
                        verbose_name="line",
                    ),
                ),
            ],
            options={
                "verbose_name": "offline location batch",
                "verbose_name_plural": "offline location batches",
                "ordering": ["-collected_at"],
            },
        ),
        migrations.CreateModel(
            name="TrackingSession",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="start time"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="end time"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("error", "Error"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "last_update",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last update"
                    ),
                ),
                (
                    "total_distance",
                    models.FloatField(
                        default=0, verbose_name="total distance (meters)"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "bus",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_sessions",
                        to="buses.bus",
                        verbose_name="bus",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_sessions",
                        to="drivers.driver",
                        verbose_name="driver",
                    ),
                ),
                (
                    "line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_sessions",
                        to="lines.line",
                        verbose_name="line",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tracking_sessions",
                        to="schedules.schedule",
                        verbose_name="schedule",
                    ),
                ),
            ],
            options={
                "verbose_name": "tracking session",
                "verbose_name_plural": "tracking sessions",
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="TrackingLog",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "event_type",
                    models.CharField(max_length=50, verbose_name="event type"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="timestamp"
                    ),
                ),
                ("message", models.TextField(blank=True, verbose_name="message")),
                (
                    "data",
                    models.JSONField(blank=True, default=dict, verbose_name="data"),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="tracking.trackingsession",
                        verbose_name="session",
                    ),
                ),
            ],
            options={
                "verbose_name": "tracking log",
                "verbose_name_plural": "tracking logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="LocationUpdate",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=6, max_digits=9, verbose_name="Latitude"
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=6, max_digits=9, verbose_name="Longitude"
                    ),
                ),
                (
                    "accuracy",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Accuracy (meters)"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="timestamp",
                    ),
                ),
                (
                    "speed",
                    models.FloatField(
                        blank=True, null=True, verbose_name="speed (m/s)"
                    ),
                ),
                (
                    "heading",
                    models.FloatField(
                        blank=True, null=True, verbose_name="heading (degrees)"
                    ),
                ),
                (
                    "altitude",
                    models.FloatField(
                        blank=True, null=True, verbose_name="altitude (meters)"
                    ),
                ),
                (
                    "distance_from_last",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="distance from last update (meters)",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location_updates",
                        to="tracking.trackingsession",
                        verbose_name="session",
                    ),
                ),
            ],
            options={
                "verbose_name": "location update",
                "verbose_name_plural": "location updates",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="trackingsession",
            index=models.Index(
                fields=["driver"], name="tracking_tr_driver__b2c1a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="trackingsession",
            index=models.Index(fields=["bus"], name="tracking_tr_bus_id_de557d_idx"),
        ),
        migrations.AddIndex(
            model_name="trackingsession",
            index=models.Index(fields=["line"], name="tracking_tr_line_id_95a4a1_idx"),
        ),
        migrations.AddIndex(
            model_name="trackingsession",
            index=models.Index(fields=["status"], name="tracking_tr_status_c17169_idx"),
        ),
        migrations.AddIndex(
            model_name="trackingsession",
            index=models.Index(
                fields=["start_time"], name="tracking_tr_start_t_cd1f0f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationupdate",
            index=models.Index(
                fields=["session", "timestamp"], name="tracking_lo_session_386a2c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="locationupdate",
            index=models.Index(
                fields=["timestamp"], name="tracking_lo_timesta_326763_idx"
            ),
        ),
    ]
