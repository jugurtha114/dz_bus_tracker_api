# Generated by Django 5.1.8 on 2025-04-16 16:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Feedback",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("admin", "Admin"),
                            ("driver", "Driver"),
                            ("passenger", "Passenger"),
                        ],
                        help_text="Type of user submitting the feedback.",
                        max_length=20,
                        null=True,
                        verbose_name="user type",
                    ),
                ),
                (
                    "is_anonymous",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the feedback is anonymous.",
                        verbose_name="is anonymous",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("bug", "Bug"),
                            ("feature", "Feature Request"),
                            ("complaint", "Complaint"),
                            ("praise", "Praise"),
                        ],
                        max_length=20,
                        verbose_name="type",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("bug", "Bug"),
                            ("feature", "Feature Request"),
                            ("general", "General"),
                        ],
                        default="general",
                        max_length=20,
                        verbose_name="category",
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="subject")),
                ("message", models.TextField(verbose_name="message")),
                (
                    "contact_info",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="contact info"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                        verbose_name="priority",
                    ),
                ),
                ("response", models.TextField(blank=True, verbose_name="response")),
                (
                    "resolution_notes",
                    models.TextField(blank=True, verbose_name="resolution notes"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="resolved at"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(blank=True, default=dict, verbose_name="metadata"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_feedback",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="assigned to",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="feedback",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "feedback",
                "verbose_name_plural": "feedback",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FeedbackAttachment",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="feedback_attachments/", verbose_name="file"
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="description"
                    ),
                ),
                (
                    "feedback",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="feedback.feedback",
                        verbose_name="feedback",
                    ),
                ),
            ],
            options={
                "verbose_name": "feedback attachment",
                "verbose_name_plural": "feedback attachments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="SupportTicket",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="subject")),
                ("description", models.TextField(verbose_name="description")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("awaiting_user", "Awaiting User"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                        verbose_name="priority",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("account", "Account"),
                            ("tracking", "Tracking"),
                            ("app", "App"),
                            ("payment", "Payment"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                        verbose_name="category",
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="resolved at"
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(blank=True, verbose_name="resolution notes"),
                ),
                (
                    "is_escalated",
                    models.BooleanField(default=False, verbose_name="is escalated"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="assigned to",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="support_tickets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "support ticket",
                "verbose_name_plural": "support tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SupportTicketResponse",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                ("message", models.TextField(verbose_name="message")),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="ticket_attachments/",
                        verbose_name="attachment",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="is staff"),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="feedback.supportticket",
                        verbose_name="ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_responses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "support ticket response",
                "verbose_name_plural": "support ticket responses",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="AbuseReport",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="Deleted"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Deleted at"
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        choices=[
                            ("harassment", "Harassment"),
                            ("inappropriate", "Inappropriate Behavior"),
                            ("spam", "Spam"),
                            ("fraud", "Fraud"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        verbose_name="reason",
                    ),
                ),
                ("description", models.TextField(verbose_name="description")),
                (
                    "evidence",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="abuse_evidence/",
                        verbose_name="evidence",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="high",
                        max_length=20,
                        verbose_name="priority",
                    ),
                ),
                (
                    "is_escalated",
                    models.BooleanField(default=False, verbose_name="is escalated"),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="resolved at"
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(blank=True, verbose_name="resolution notes"),
                ),
                (
                    "reported_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="abuse_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="reported user",
                    ),
                ),
                (
                    "reporter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reported_abuse",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="reporter",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_abuse_reports",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="resolved by",
                    ),
                ),
            ],
            options={
                "verbose_name": "abuse report",
                "verbose_name_plural": "abuse reports",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["reporter"], name="feedback_ab_reporte_57880a_idx"
                    ),
                    models.Index(
                        fields=["reported_user"], name="feedback_ab_reporte_fddf51_idx"
                    ),
                    models.Index(
                        fields=["status"], name="feedback_ab_status_a69a8e_idx"
                    ),
                    models.Index(
                        fields=["priority"], name="feedback_ab_priorit_e2b37c_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(fields=["user"], name="feedback_fe_user_id_b3b486_idx"),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(fields=["type"], name="feedback_fe_type_89f574_idx"),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(fields=["status"], name="feedback_fe_status_35d074_idx"),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["category"], name="feedback_fe_categor_9a32a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="feedback",
            index=models.Index(
                fields=["priority"], name="feedback_fe_priorit_fbe607_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(fields=["user"], name="feedback_su_user_id_9a3f93_idx"),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(fields=["status"], name="feedback_su_status_56d246_idx"),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["priority"], name="feedback_su_priorit_2e4c30_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["category"], name="feedback_su_categor_ab8f92_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticketresponse",
            index=models.Index(
                fields=["ticket"], name="feedback_su_ticket__1c7445_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticketresponse",
            index=models.Index(fields=["user"], name="feedback_su_user_id_a485ae_idx"),
        ),
    ]
