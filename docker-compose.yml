services:
  web:
    build:
      context: .
      target: development
    image: dz_bus_tracker_web
    command: >
      bash -c "python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - dz_bus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgis/postgis:17-3.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-dz_bus_tracker_db}
    ports:
      - "5432:5432"
    networks:
      - dz_bus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - dz_bus_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: .
      target: development
    image: dz_bus_tracker_celery
    command: celery -A celery_app worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web
    networks:
      - dz_bus_network
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      target: development
    image: dz_bus_tracker_celery_beat
    command: celery -A celery_app beat -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web
    networks:
      - dz_bus_network
    restart: unless-stopped

  flower:
    build:
      context: .
      target: development
    image: dz_bus_tracker_flower
    command: celery -A celery_app flower
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    networks:
      - dz_bus_network
    restart: unless-stopped

networks:
  dz_bus_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: