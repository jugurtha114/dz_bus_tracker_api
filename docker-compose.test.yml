version: '3.8'

services:
  postgres-test:
    image: postgres:15-alpine
    container_name: dz_bus_tracker_postgres_test
    environment:
      POSTGRES_DB: dz_bus_tracker_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7-alpine
    container_name: dz_bus_tracker_redis_test
    command: redis-server --appendonly yes
    ports:
      - "6381:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: dz_bus_tracker_test
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.test
      - DATABASE_URL=postgres://postgres:postgres@postgres-test:5432/dz_bus_tracker_test
      - DB_HOST=postgres-test
      - DB_PORT=5432
      - DB_NAME=dz_bus_tracker_test
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - CELERY_BROKER_URL=redis://redis-test:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-test:6379/0
      - CELERY_TASK_ALWAYS_EAGER=True
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    command: ["sh", "-c", "python manage.py migrate && python manage.py test --no-input --parallel"]